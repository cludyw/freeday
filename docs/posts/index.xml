<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on cludyw</title>
    <link>/freeday/posts/</link>
    <description>Recent content in Posts on cludyw</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 18 Dec 2019 15:57:07 +0800</lastBuildDate>
    
	<atom:link href="/freeday/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql 死锁排查常用命令</title>
      <link>/freeday/2019/dealock/</link>
      <pubDate>Wed, 18 Dec 2019 15:57:07 +0800</pubDate>
      
      <guid>/freeday/2019/dealock/</guid>
      <description> 查看最后一次死锁信息 show engine innodb status;  通过查看错误日志排查 查看是否开启错误日志 show variables like &#39;innodb_print_all_deadlocks&#39;;  查看日志路径 show variables like &#39;log_error&#39;  如果为stderr则输入到console, 可在启动时指定&amp;ndash;log-error或配置/etc/mysql/my.cnf中log_error参数指定错误日志路径
查看表锁 show OPEN TABLES where In_use &amp;gt; 0;  查看事务列表 SELECT * FROM INFORMATION_SCHEMA.INNODB_TRX;  查看线程sql执行历史 SELECT * FROM performance_schema.events_statements_history WHERE thread_id = (SELECT THREAD_ID FROM performance_schema.threads WHERE PROCESSLIST_ID = 11062)  查看线程列表 SHOW PROCESSLIST;  mysql8.0.1版本后可以performance_schema.data_locks查看锁 SELECT * from performance_schema.data_locks;  </description>
    </item>
    
    <item>
      <title>JAVA GC 调优常用命令</title>
      <link>/freeday/2019/gc/</link>
      <pubDate>Wed, 20 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/freeday/2019/gc/</guid>
      <description>打印线程信息 ps -mp pid -o THREAD,tid,time  -m 代表打印线程信息 -o 输出格式
格式：args, cmd, comm, command, fname, ucmd, ucomm, lstart, bsdstart, start
打印所有进程 ps –ef 或 ps aux  推荐ps -ef 因为aux会截断显示command
打印线程堆栈信息 10进制转16进制
printf &amp;quot;%x\n&amp;quot; tid  jstack pid | grep tid -A 30  tid为16进制
-A 代表行数
解决jmap:Operation not permitted echo 0 &amp;gt; /proc/sys/kernel/yama/ptrace_scope  永久更改：
vi /etc/sysctl.d/10-ptrace.conf kernel.yama.ptrace_scope = 0  GC日志参数  XX:+PrintGC：输出GC日志 XX:+PrintGCDetails：输出GC的详细日志 XX:+PrintGCTimeStamps：输出GC的时间戳（以基准时间的形式） XX:+PrintGCDateStamps：输出GC的时间戳（以日期的形式，如2018-08-29T19:22:48.741-0800） XX:+PrintHeapAtGC：在进行GC的前后打印出堆的信息 Xloggc:gc.</description>
    </item>
    
  </channel>
</rss>